# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T14:42:51+00:00

from __future__ import annotations

from datetime import date, datetime
from enum import Enum
from typing import Any, Dict, List, Optional, Union

from pydantic import BaseModel, ConfigDict, EmailStr, Field, RootModel, constr


class Type(Enum):
    primary = 'primary'
    secondary = 'secondary'
    home = 'home'
    office = 'office'
    shipping = 'shipping'
    billing = 'billing'
    other = 'other'


class BadRequestResponse(BaseModel):
    detail: Optional[Union[str, Dict[str, Any]]] = Field(
        None,
        description='Contains parameter or domain specific information related to the error and why it occurred.',
    )
    error: Optional[str] = Field(
        None,
        description='Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)',
        examples=['Bad Request'],
    )
    message: Optional[str] = Field(
        None,
        description='A human-readable message providing more details about the error.',
        examples=['Invalid Params'],
    )
    ref: Optional[str] = Field(
        None,
        description='Link to documentation of error type',
        examples=['https://developers.apideck.com/errors#requestvalidationerror'],
    )
    status_code: Optional[float] = Field(
        None, description='HTTP status code', examples=[400]
    )
    type_name: Optional[str] = Field(
        None,
        description='The type of error returned',
        examples=['RequestValidationError'],
    )


class AccountType(Enum):
    bank_account = 'bank_account'
    credit_card = 'credit_card'
    other = 'other'


class RowType(BaseModel):
    id: Optional[str] = Field(None, examples=['12345'])
    name: Optional[str] = Field(None, examples=['Customer Account'])


class CompanyName(RootModel[Optional[str]]):
    root: Optional[str] = Field(
        None,
        description='The name of the company.',
        examples=['SpaceX'],
        title='Company name',
    )


class Gender(Enum):
    male = 'male'
    female = 'female'
    unisex = 'unisex'


class Type1(Enum):
    customer = 'customer'
    supplier = 'supplier'
    employee = 'employee'
    personal = 'personal'


class Currency(Enum):
    UNKNOWN_CURRENCY = 'UNKNOWN_CURRENCY'
    AED = 'AED'
    AFN = 'AFN'
    ALL = 'ALL'
    AMD = 'AMD'
    ANG = 'ANG'
    AOA = 'AOA'
    ARS = 'ARS'
    AUD = 'AUD'
    AWG = 'AWG'
    AZN = 'AZN'
    BAM = 'BAM'
    BBD = 'BBD'
    BDT = 'BDT'
    BGN = 'BGN'
    BHD = 'BHD'
    BIF = 'BIF'
    BMD = 'BMD'
    BND = 'BND'
    BOB = 'BOB'
    BOV = 'BOV'
    BRL = 'BRL'
    BSD = 'BSD'
    BTN = 'BTN'
    BWP = 'BWP'
    BYR = 'BYR'
    BZD = 'BZD'
    CAD = 'CAD'
    CDF = 'CDF'
    CHE = 'CHE'
    CHF = 'CHF'
    CHW = 'CHW'
    CLF = 'CLF'
    CLP = 'CLP'
    CNY = 'CNY'
    COP = 'COP'
    COU = 'COU'
    CRC = 'CRC'
    CUC = 'CUC'
    CUP = 'CUP'
    CVE = 'CVE'
    CZK = 'CZK'
    DJF = 'DJF'
    DKK = 'DKK'
    DOP = 'DOP'
    DZD = 'DZD'
    EGP = 'EGP'
    ERN = 'ERN'
    ETB = 'ETB'
    EUR = 'EUR'
    FJD = 'FJD'
    FKP = 'FKP'
    GBP = 'GBP'
    GEL = 'GEL'
    GHS = 'GHS'
    GIP = 'GIP'
    GMD = 'GMD'
    GNF = 'GNF'
    GTQ = 'GTQ'
    GYD = 'GYD'
    HKD = 'HKD'
    HNL = 'HNL'
    HRK = 'HRK'
    HTG = 'HTG'
    HUF = 'HUF'
    IDR = 'IDR'
    ILS = 'ILS'
    INR = 'INR'
    IQD = 'IQD'
    IRR = 'IRR'
    ISK = 'ISK'
    JMD = 'JMD'
    JOD = 'JOD'
    JPY = 'JPY'
    KES = 'KES'
    KGS = 'KGS'
    KHR = 'KHR'
    KMF = 'KMF'
    KPW = 'KPW'
    KRW = 'KRW'
    KWD = 'KWD'
    KYD = 'KYD'
    KZT = 'KZT'
    LAK = 'LAK'
    LBP = 'LBP'
    LKR = 'LKR'
    LRD = 'LRD'
    LSL = 'LSL'
    LTL = 'LTL'
    LVL = 'LVL'
    LYD = 'LYD'
    MAD = 'MAD'
    MDL = 'MDL'
    MGA = 'MGA'
    MKD = 'MKD'
    MMK = 'MMK'
    MNT = 'MNT'
    MOP = 'MOP'
    MRO = 'MRO'
    MUR = 'MUR'
    MVR = 'MVR'
    MWK = 'MWK'
    MXN = 'MXN'
    MXV = 'MXV'
    MYR = 'MYR'
    MZN = 'MZN'
    NAD = 'NAD'
    NGN = 'NGN'
    NIO = 'NIO'
    NOK = 'NOK'
    NPR = 'NPR'
    NZD = 'NZD'
    OMR = 'OMR'
    PAB = 'PAB'
    PEN = 'PEN'
    PGK = 'PGK'
    PHP = 'PHP'
    PKR = 'PKR'
    PLN = 'PLN'
    PYG = 'PYG'
    QAR = 'QAR'
    RON = 'RON'
    RSD = 'RSD'
    RUB = 'RUB'
    RWF = 'RWF'
    SAR = 'SAR'
    SBD = 'SBD'
    SCR = 'SCR'
    SDG = 'SDG'
    SEK = 'SEK'
    SGD = 'SGD'
    SHP = 'SHP'
    SLL = 'SLL'
    SOS = 'SOS'
    SRD = 'SRD'
    SSP = 'SSP'
    STD = 'STD'
    SVC = 'SVC'
    SYP = 'SYP'
    SZL = 'SZL'
    THB = 'THB'
    TJS = 'TJS'
    TMT = 'TMT'
    TND = 'TND'
    TOP = 'TOP'
    TRC = 'TRC'
    TRY = 'TRY'
    TTD = 'TTD'
    TWD = 'TWD'
    TZS = 'TZS'
    UAH = 'UAH'
    UGX = 'UGX'
    USD = 'USD'
    USN = 'USN'
    USS = 'USS'
    UYI = 'UYI'
    UYU = 'UYU'
    UZS = 'UZS'
    VEF = 'VEF'
    VND = 'VND'
    VUV = 'VUV'
    WST = 'WST'
    XAF = 'XAF'
    XAG = 'XAG'
    XAU = 'XAU'
    XBA = 'XBA'
    XBB = 'XBB'
    XBC = 'XBC'
    XBD = 'XBD'
    XCD = 'XCD'
    XDR = 'XDR'
    XOF = 'XOF'
    XPD = 'XPD'
    XPF = 'XPF'
    XPT = 'XPT'
    XTS = 'XTS'
    XXX = 'XXX'
    YER = 'YER'
    ZAR = 'ZAR'
    ZMK = 'ZMK'
    ZMW = 'ZMW'
    BTC = 'BTC'
    ETH = 'ETH'


class CustomField(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    description: Optional[str] = Field(
        None,
        description='More information about the custom field',
        examples=['Employee Level'],
        title='Description',
    )
    id: str = Field(..., examples=['2389328923893298'], title='ID')
    name: Optional[str] = Field(
        None,
        description='Name of the custom field.',
        examples=['employee_level'],
        title='Name',
    )
    value: Optional[Union[str, float, bool, List[str]]] = None


class Status(Enum):
    active = 'active'
    archived = 'archived'
    gdpr_erasure_request = 'gdpr-erasure-request'
    unknown = 'unknown'


class Type2(Enum):
    primary = 'primary'
    secondary = 'secondary'
    work = 'work'
    personal = 'personal'
    billing = 'billing'
    other = 'other'


class Email(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    email: EmailStr = Field(..., examples=['elon@musk.com'])
    id: Optional[str] = Field(None, examples=['123'])
    type: Optional[Type2] = Field(None, examples=['primary'])


class FirstName(RootModel[Optional[str]]):
    root: Optional[str] = Field(
        None,
        description='The first name of the person.',
        examples=['Elon'],
        title='First name',
    )


class LastName(RootModel[Optional[str]]):
    root: Optional[str] = Field(
        None,
        description='The last name of the person.',
        examples=['Musk'],
        title='Last name',
    )


class Links(BaseModel):
    current: Optional[str] = Field(
        None,
        description='Link to navigate to the current page through the API',
        examples=['https://unify.apideck.com/crm/companies'],
    )
    next: Optional[str] = Field(
        None,
        description='Link to navigate to the previous page through the API',
        examples=[
            'https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM'
        ],
    )
    previous: Optional[str] = Field(
        None,
        description='Link to navigate to the previous page through the API',
        examples=[
            'https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D'
        ],
    )


class Cursors(BaseModel):
    current: Optional[str] = Field(
        None,
        description='Cursor to navigate to the current page of results through the API',
        examples=['em9oby1jcm06OnBhZ2U6OjI='],
    )
    next: Optional[str] = Field(
        None,
        description='Cursor to navigate to the next page of results through the API',
        examples=['em9oby1jcm06OnBhZ2U6OjM='],
    )
    previous: Optional[str] = Field(
        None,
        description='Cursor to navigate to the previous page of results through the API',
        examples=['em9oby1jcm06OnBhZ2U6OjE='],
    )


class Meta(BaseModel):
    cursors: Optional[Cursors] = Field(
        None,
        description='Cursors to navigate to previous or next pages through the API',
    )
    items_on_page: Optional[int] = Field(
        None,
        description='Number of items returned in the data property of the response',
        examples=[50],
    )


class NotFoundResponse(BaseModel):
    detail: Optional[Union[str, Dict[str, Any]]] = Field(
        None,
        description='Contains parameter or domain specific information related to the error and why it occurred.',
    )
    error: Optional[str] = Field(
        None,
        description='Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)',
        examples=['Not Found'],
    )
    message: Optional[str] = Field(
        None,
        description='A human-readable message providing more details about the error.',
        examples=['Unknown Widget'],
    )
    ref: Optional[str] = Field(
        None,
        description='Link to documentation of error type',
        examples=['https://developers.apideck.com/errors#entitynotfounderror'],
    )
    status_code: Optional[float] = Field(
        None, description='HTTP status code', examples=[404]
    )
    type_name: Optional[str] = Field(
        None, description='The type of error returned', examples=['EntityNotFoundError']
    )


class NotImplementedResponse(BaseModel):
    detail: Optional[Union[str, Dict[str, Any]]] = Field(
        None,
        description='Contains parameter or domain specific information related to the error and why it occurred.',
    )
    error: Optional[str] = Field(
        None,
        description='Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)',
        examples=['Not Implemented'],
    )
    message: Optional[str] = Field(
        None,
        description='A human-readable message providing more details about the error.',
        examples=['Unmapped Attribute'],
    )
    ref: Optional[str] = Field(
        None,
        description='Link to documentation of error type',
        examples=['https://developers.apideck.com/errors#mappingerror'],
    )
    status_code: Optional[float] = Field(
        None, description='HTTP status code', examples=[501]
    )
    type_name: Optional[str] = Field(
        None, description='The type of error returned', examples=['MappingError']
    )


class PaymentRequiredResponse(BaseModel):
    detail: Optional[str] = Field(
        None,
        description='Contains parameter or domain specific information related to the error and why it occurred.',
        examples=['You have reached your limit of 2000'],
    )
    error: Optional[str] = Field(
        None,
        description='Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)',
        examples=['Payment Required'],
    )
    message: Optional[str] = Field(
        None,
        description='A human-readable message providing more details about the error.',
        examples=['Request Limit Reached'],
    )
    ref: Optional[str] = Field(
        None,
        description='Link to documentation of error type',
        examples=['https://developers.apideck.com/errors#requestlimiterror'],
    )
    status_code: Optional[float] = Field(
        None, description='HTTP status code', examples=[402]
    )
    type_name: Optional[str] = Field(
        None, description='The type of error returned', examples=['RequestLimitError']
    )


class Type3(Enum):
    primary = 'primary'
    secondary = 'secondary'
    home = 'home'
    work = 'work'
    office = 'office'
    mobile = 'mobile'
    assistant = 'assistant'
    fax = 'fax'
    direct_dial_in = 'direct-dial-in'
    personal = 'personal'
    other = 'other'


class PhoneNumber(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    area_code: Optional[str] = Field(None, examples=['323'], title='Area code')
    country_code: Optional[str] = Field(None, examples=['1'], title='Country code')
    extension: Optional[str] = Field(None, examples=['105'], title='Phone extension')
    id: Optional[str] = Field(None, examples=['12345'])
    number: constr(min_length=1) = Field(
        ..., examples=['111-111-1111'], title='Phone number'
    )
    type: Optional[Type3] = Field(None, examples=['primary'])


class RowVersion(RootModel[Optional[str]]):
    root: Optional[str] = Field(
        None,
        description='A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.',
        examples=['1-12345'],
        title='Row version',
    )


class SocialLink(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: Optional[str] = Field(None, examples=['12345'])
    type: Optional[str] = Field(None, examples=['twitter'])
    url: constr(min_length=1) = Field(
        ..., examples=['https://www.twitter.com/apideck-io']
    )


class Tags(RootModel[List[str]]):
    root: List[str] = Field(..., examples=[['New']])


class Detail(BaseModel):
    context: Optional[str] = None
    error: Optional[Dict[str, Any]] = None


class TooManyRequestsResponse(BaseModel):
    detail: Optional[Detail] = None
    error: Optional[str] = Field(
        None,
        description='Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 6585)',
        examples=['Too Many Requests'],
    )
    message: Optional[str] = Field(
        None,
        description='A human-readable message providing more details about the error.',
        examples=['Connector Rate Limit Error'],
    )
    ref: Optional[str] = Field(
        None,
        description='Link to documentation of error type',
        examples=['https://developers.apideck.com/errors#connectorratelimiterror'],
    )
    status_code: Optional[float] = Field(
        None, description='HTTP status code', examples=[429]
    )
    type_name: Optional[str] = Field(
        None,
        description='The type of error returned',
        examples=['ConnectorRateLimitError'],
    )


class UnauthorizedResponse(BaseModel):
    detail: Optional[str] = Field(
        None,
        description='Contains parameter or domain specific information related to the error and why it occurred.',
        examples=[
            'Failed to generate valid JWT Session. Verify applicationId is correct'
        ],
    )
    error: Optional[str] = Field(
        None,
        description='Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)',
        examples=['Unauthorized'],
    )
    message: Optional[str] = Field(
        None,
        description='A human-readable message providing more details about the error.',
        examples=['Unauthorized Request'],
    )
    ref: Optional[str] = Field(
        None,
        description='Link to documentation of error type',
        examples=['https://developers.apideck.com/errors#unauthorizederror'],
    )
    status_code: Optional[float] = Field(
        None, description='HTTP status code', examples=[401]
    )
    type_name: Optional[str] = Field(
        None, description='The type of error returned', examples=['UnauthorizedError']
    )


class UnexpectedErrorResponse(BaseModel):
    detail: Optional[Union[str, Dict[str, Any]]] = Field(
        None,
        description='Contains parameter or domain specific information related to the error and why it occurred.',
    )
    error: Optional[str] = Field(
        None,
        description='Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)',
        examples=['Bad Request'],
    )
    message: Optional[str] = Field(
        None,
        description='A human-readable message providing more details about the error.',
        examples=['Invalid Params'],
    )
    ref: Optional[str] = Field(
        None,
        description='Link to documentation of error type',
        examples=['https://developers.apideck.com/errors#unauthorizederror'],
    )
    status_code: Optional[float] = Field(
        None, description='HTTP status code', examples=[400]
    )
    type_name: Optional[str] = Field(
        None,
        description='The type of error returned',
        examples=['RequestHeadersValidationError'],
    )


class UnifiedId(BaseModel):
    id: str = Field(
        ...,
        description='The unique identifier of the resource',
        examples=['12345'],
        title='Id',
    )


class UnprocessableResponse(BaseModel):
    detail: Optional[str] = Field(
        None,
        description='Contains parameter or domain specific information related to the error and why it occurred.',
        examples=[
            'Unprocessable request, please verify your request headers and body.'
        ],
    )
    error: Optional[str] = Field(
        None,
        description='Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)',
        examples=['Unprocessable Entity'],
    )
    message: Optional[str] = Field(
        None,
        description='A human-readable message providing more details about the error.',
        examples=['Invalid State'],
    )
    ref: Optional[str] = Field(
        None,
        description='Link to documentation of error type',
        examples=['https://developers.apideck.com/errors#invalidstateerror'],
    )
    status_code: Optional[float] = Field(
        None, description='HTTP status code', examples=[422]
    )
    type_name: Optional[str] = Field(
        None, description='The type of error returned', examples=['InvalidStateError']
    )


class UpdateCustomerSupportCustomerResponse(BaseModel):
    data: UnifiedId
    operation: str = Field(..., description='Operation performed', examples=['update'])
    resource: str = Field(
        ..., description='Unified API resource name', examples=['customers']
    )
    service: str = Field(
        ..., description='Apideck ID of service provider', examples=['kustomer']
    )
    status: str = Field(..., description='HTTP Response Status', examples=['OK'])
    status_code: int = Field(
        ..., description='HTTP Response Status Code', examples=[200]
    )


class Type4(Enum):
    primary = 'primary'
    secondary = 'secondary'
    work = 'work'
    personal = 'personal'
    other = 'other'


class Website(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: Optional[str] = Field(None, examples=['12345'])
    type: Optional[Type4] = Field(None, examples=['primary'])
    url: constr(min_length=1) = Field(..., examples=['http://example.com'])


class Address(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    city: Optional[str] = Field(
        None, description='Name of city.', examples=['San Francisco']
    )
    contact_name: Optional[str] = Field(None, examples=['Elon Musk'])
    country: Optional[str] = Field(
        None,
        description='country code according to ISO 3166-1 alpha-2.',
        examples=['US'],
    )
    county: Optional[str] = Field(
        None,
        description='Address field that holds a sublocality, such as a county',
        examples=['Santa Clara'],
    )
    email: Optional[str] = Field(None, examples=['elon@musk.com'])
    fax: Optional[str] = Field(None, examples=['122-111-1111'])
    id: Optional[str] = Field(None, examples=['123'])
    latitude: Optional[str] = Field(None, examples=['40.759211'])
    line1: Optional[str] = Field(
        None,
        description='Line 1 of the address e.g. number, street, suite, apt #, etc.',
        examples=['Main street'],
    )
    line2: Optional[str] = Field(
        None, description='Line 2 of the address', examples=['apt #']
    )
    line3: Optional[str] = Field(
        None, description='Line 3 of the address', examples=['Suite #']
    )
    line4: Optional[str] = Field(
        None, description='Line 4 of the address', examples=['delivery instructions']
    )
    longitude: Optional[str] = Field(None, examples=['-73.984638'])
    name: Optional[str] = Field(None, examples=['HQ US'])
    phone_number: Optional[str] = Field(None, examples=['111-111-1111'])
    postal_code: Optional[str] = Field(
        None, description='Zip code or equivalent.', examples=['94104']
    )
    row_version: Optional[RowVersion] = None
    salutation: Optional[str] = Field(None, examples=['Mr'])
    state: Optional[str] = Field(None, description='Name of state', examples=['CA'])
    street_number: Optional[str] = Field(
        None, description='Street number', examples=['25']
    )
    string: Optional[str] = Field(
        None,
        examples=['25 Spring Street, Blackburn, VIC 3130'],
        title="The address string. Some APIs don't provide structured address data.",
    )
    type: Optional[Type] = Field(None, examples=['primary'])
    website: Optional[str] = Field(None, examples=['https://elonmusk.com'])


class BankAccount(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    account_name: Optional[str] = Field(
        None,
        description='The name which you used in opening your bank account.',
        examples=['SPACEX LLC'],
        title='Bank Account Name',
    )
    account_number: Optional[str] = Field(
        None,
        description='A bank account number is a number that is tied to your bank account. If you have several bank accounts, such as personal, joint, business (and so on), each account will have a different account number.',
        examples=['123465'],
        title='Bank Account Number',
    )
    account_type: Optional[AccountType] = Field(
        None,
        description='The type of bank account.',
        examples=['credit_card'],
        title='Account Type',
    )
    bank_code: Optional[str] = Field(
        None,
        description='A bank code is a code assigned by a central bank, a bank supervisory body or a Bankers Association in a country to all its licensed member banks or financial institutions.',
        examples=['BNH'],
        title='Bank Code',
    )
    bic: Optional[str] = Field(None, examples=['AUDSCHGGXXX'])
    branch_identifier: Optional[str] = Field(
        None,
        description='A branch identifier is a unique identifier for a branch of a bank or financial institution.',
        examples=['001'],
        title='Branch Identifier',
    )
    bsb_number: Optional[str] = Field(
        None,
        description='A BSB is a 6 digit numeric code used for identifying the branch of an Australian or New Zealand bank or financial institution.',
        examples=['062-001'],
        title='BSB Number',
    )
    currency: Optional[Currency] = None
    iban: Optional[str] = Field(None, examples=['CH2989144532982975332'])


class Company(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    abn_branch: Optional[str] = Field(
        None,
        description='An ABN Branch (also known as a GST Branch) is used if part of your business needs to account for GST separately from its parent entity.',
        examples=['123'],
        title='ABN Branch',
    )
    abn_or_tfn: Optional[str] = Field(
        None,
        description='An ABN is necessary for operating a business, while a TFN (Tax File Number) is required for any person working in Australia.',
        examples=['46 115 614 695'],
        title='ABN or TFN',
    )
    acn: Optional[str] = Field(
        None,
        description='The Australian Company Number (ACN) is a nine digit number with the last digit being a check digit calculated using a modified modulus 10 calculation. ASIC has adopted a convention of always printing and displaying the ACN in the format XXX XXX XXX; three blocks of three characters, each block separated by a blank.',
        examples=['XXX XXX XXX'],
        title='ACN',
    )
    addresses: Optional[List[Address]] = None
    annual_revenue: Optional[str] = Field(
        None, description='Annual revenue', examples=['+$35m']
    )
    bank_accounts: Optional[List[BankAccount]] = None
    birthday: Optional[date] = Field(
        None,
        description='The date of birth of the person.',
        examples=['2000-08-12'],
        title='Birth Date',
    )
    created_at: Optional[datetime] = Field(None, examples=['2020-09-30T07:43:32.000Z'])
    created_by: Optional[str] = Field(None, examples=['12345'])
    currency: Optional[Currency] = None
    custom_fields: Optional[List[CustomField]] = None
    deleted: Optional[bool] = Field(None, examples=[False])
    description: Optional[str] = Field(
        None,
        examples=[
            'Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.'
        ],
    )
    emails: Optional[List[Email]] = None
    fax: Optional[str] = Field(None, examples=['+12129876543'])
    first_name: Optional[FirstName] = None
    id: Optional[str] = Field(None, examples=['12345'])
    image: Optional[str] = Field(
        None, examples=['https://www.spacex.com/static/images/share.jpg']
    )
    industry: Optional[str] = Field(None, description='Industry', examples=['Apparel'])
    interaction_count: Optional[int] = Field(None, examples=[1])
    last_activity_at: Optional[datetime] = Field(
        None, examples=['2020-09-30T07:43:32.000Z']
    )
    last_name: Optional[LastName] = None
    name: constr(min_length=1) = Field(..., examples=['SpaceX'])
    number_of_employees: Optional[str] = Field(
        None, description='Number of employees', examples=['500-1000']
    )
    owner_id: Optional[str] = Field(None, examples=['12345'])
    ownership: Optional[str] = Field(None, description='Ownership', examples=['Public'])
    parent_id: Optional[str] = Field(None, description='Parent ID', examples=['22345'])
    payee_number: Optional[str] = Field(
        None, examples=['78932EN'], title='Payee number'
    )
    phone_numbers: Optional[List[PhoneNumber]] = None
    read_only: Optional[bool] = Field(None, examples=[False], title='Read-only')
    row_type: Optional[RowType] = Field(None, title='Company Row Type')
    sales_tax_number: Optional[str] = Field(
        None, examples=['12456EN'], title='Sales tax number'
    )
    salutation: Optional[str] = Field(
        None,
        description="A formal salutation for the person. For example, 'Mr', 'Mrs'",
        examples=['Mr'],
    )
    social_links: Optional[List[SocialLink]] = None
    status: Optional[str] = Field(None, examples=['Open'])
    tags: Optional[Tags] = None
    updated_at: Optional[datetime] = Field(None, examples=['2020-09-30T07:43:32.000Z'])
    updated_by: Optional[str] = Field(None, examples=['12345'])
    vat_number: Optional[str] = Field(
        None, description='VAT number', examples=['BE0689615164']
    )
    websites: Optional[List[Website]] = None


class Contact(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    active: Optional[bool] = Field(None, examples=[True])
    addresses: Optional[List[Address]] = None
    birthday: Optional[str] = Field(None, examples=['2000-08-12'])
    company_id: Optional[str] = Field(None, examples=['23456'])
    company_name: Optional[str] = Field(None, examples=['23456'])
    created_at: Optional[datetime] = Field(None, examples=['2017-08-12T20:43:21.291Z'])
    current_balance: Optional[float] = Field(
        None, examples=[10.5], title='Current Balance'
    )
    custom_fields: Optional[List[CustomField]] = None
    department: Optional[str] = Field(None, examples=['Engineering'])
    description: Optional[str] = Field(
        None, examples=['Internal champion'], title='Description'
    )
    email_domain: Optional[str] = Field(None, examples=['gmail.com'])
    emails: Optional[List[Email]] = None
    fax: Optional[str] = Field(None, examples=['+12129876543'])
    first_call_at: Optional[datetime] = Field(
        None, examples=['2020-09-30T07:43:32.000Z']
    )
    first_email_at: Optional[datetime] = Field(
        None, examples=['2020-09-30T07:43:32.000Z']
    )
    first_name: Optional[str] = Field(None, examples=['Elon'])
    gender: Optional[Gender] = Field(None, examples=['female'])
    id: Optional[str] = Field(None, examples=['12345'])
    image: Optional[str] = Field(None, examples=['https://unavatar.io/elon-musk'])
    language: Optional[str] = Field(
        None,
        description='language code according to ISO 639-1. For the United States - EN',
        examples=['EN'],
    )
    last_activity_at: Optional[datetime] = Field(
        None, examples=['2020-09-30T07:43:32.000Z']
    )
    last_name: Optional[str] = Field(None, examples=['Musk'])
    lead_id: Optional[str] = Field(None, examples=['34567'])
    lead_source: Optional[str] = Field(None, examples=['Cold Call'])
    middle_name: Optional[str] = Field(None, examples=['D.'])
    name: constr(min_length=1) = Field(..., examples=['Elon Musk'])
    owner_id: Optional[str] = Field(None, examples=['54321'])
    phone_numbers: Optional[List[PhoneNumber]] = None
    photo_url: Optional[str] = Field(
        None,
        description='The URL of the photo of a person.',
        examples=['https://unavatar.io/elon-musk'],
        title='Photo URL',
    )
    prefix: Optional[str] = Field(None, examples=['Mr.'])
    social_links: Optional[List[SocialLink]] = None
    status: Optional[str] = Field(None, examples=['open'])
    suffix: Optional[str] = Field(None, examples=['PhD'])
    tags: Optional[Tags] = None
    title: Optional[str] = Field(None, examples=['CEO'])
    type: Optional[Type1] = Field(None, examples=['personal'])
    updated_at: Optional[datetime] = Field(None, examples=['2017-08-12T20:43:21.291Z'])
    websites: Optional[List[Website]] = None


class CreateCustomerSupportCustomerResponse(BaseModel):
    data: UnifiedId
    operation: str = Field(..., description='Operation performed', examples=['add'])
    resource: str = Field(
        ..., description='Unified API resource name', examples=['customers']
    )
    service: str = Field(
        ..., description='Apideck ID of service provider', examples=['kustomer']
    )
    status: str = Field(..., description='HTTP Response Status', examples=['OK'])
    status_code: int = Field(
        ..., description='HTTP Response Status Code', examples=[200]
    )


class CustomerSupportCustomer(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    addresses: Optional[List[Address]] = None
    bank_accounts: Optional[BankAccount] = None
    company_name: Optional[CompanyName] = None
    created_at: Optional[datetime] = Field(
        None,
        description='The date and time when the object was created.',
        examples=['2020-09-30T07:43:32.000Z'],
        title='Created at (timestamp)',
    )
    created_by: Optional[str] = Field(
        None,
        description='The user who created the object.',
        examples=['12345'],
        title='Created by',
    )
    currency: Optional[Currency] = None
    emails: Optional[List[Email]] = None
    first_name: Optional[FirstName] = None
    id: Optional[str] = Field(
        None,
        description='A unique identifier for an object.',
        examples=['12345'],
        title='ID',
    )
    individual: Optional[bool] = Field(None, examples=[True], title='Is individual')
    last_name: Optional[LastName] = None
    notes: Optional[str] = Field(
        None, examples=['Some notes about this customer'], title='Notes'
    )
    phone_numbers: Optional[List[PhoneNumber]] = None
    status: Optional[Status] = Field(
        None, description='Customer status', examples=['active'], title='Status'
    )
    tax_number: Optional[str] = Field(
        None, examples=['US123945459'], title='Tax number'
    )
    updated_at: Optional[datetime] = Field(
        None,
        description='The date and time when the object was last updated.',
        examples=['2020-09-30T07:43:32.000Z'],
        title='Updated at (timestamp)',
    )
    updated_by: Optional[str] = Field(
        None,
        description='The user who last updated the object.',
        examples=['12345'],
        title='Updated by',
    )


class DeleteCustomerSupportCustomerResponse(BaseModel):
    data: UnifiedId
    operation: str = Field(..., description='Operation performed', examples=['delete'])
    resource: str = Field(
        ..., description='Unified API resource name', examples=['customers']
    )
    service: str = Field(
        ..., description='Apideck ID of service provider', examples=['kustomer']
    )
    status: str = Field(..., description='HTTP Response Status', examples=['OK'])
    status_code: int = Field(
        ..., description='HTTP Response Status Code', examples=[200]
    )


class GetCustomerSupportCustomerResponse(BaseModel):
    data: CustomerSupportCustomer
    operation: str = Field(..., description='Operation performed', examples=['one'])
    resource: str = Field(
        ..., description='Unified API resource name', examples=['customers']
    )
    service: str = Field(
        ..., description='Apideck ID of service provider', examples=['kustomer']
    )
    status: str = Field(..., description='HTTP Response Status', examples=['OK'])
    status_code: int = Field(
        ..., description='HTTP Response Status Code', examples=[200]
    )


class GetCustomerSupportCustomersResponse(BaseModel):
    data: List[CustomerSupportCustomer]
    links: Optional[Links] = None
    meta: Optional[Meta] = None
    operation: str = Field(..., description='Operation performed', examples=['all'])
    resource: str = Field(
        ..., description='Unified API resource name', examples=['customers']
    )
    service: str = Field(
        ..., description='Apideck ID of service provider', examples=['kustomer']
    )
    status: str = Field(..., description='HTTP Response Status', examples=['OK'])
    status_code: int = Field(
        ..., description='HTTP Response Status Code', examples=[200]
    )


class Lead(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    addresses: Optional[List[Address]] = None
    company_id: Optional[str] = Field(None, examples=['2'])
    company_name: str = Field(..., examples=['Spacex'])
    contact_id: Optional[str] = Field(None, examples=['2'])
    created_at: Optional[str] = Field(None, examples=['2020-09-30T07:43:32.000Z'])
    currency: Optional[Currency] = None
    custom_fields: Optional[List[CustomField]] = None
    description: Optional[str] = Field(None, examples=['A thinker'])
    emails: Optional[List[Email]] = None
    fax: Optional[str] = Field(None, examples=['+12129876543'])
    first_name: Optional[str] = Field(None, examples=['Elon'])
    id: Optional[str] = Field(None, examples=['12345'])
    language: Optional[str] = Field(
        None,
        description='language code according to ISO 639-1. For the United States - EN',
        examples=['EN'],
    )
    last_name: Optional[str] = Field(None, examples=['Musk'])
    lead_source: Optional[str] = Field(None, examples=['Cold Call'])
    monetary_amount: Optional[float] = Field(None, examples=[75000])
    name: constr(min_length=1) = Field(..., examples=['Elon Musk'])
    owner_id: Optional[str] = Field(None, examples=['54321'])
    phone_numbers: Optional[List[PhoneNumber]] = None
    prefix: Optional[str] = Field(None, examples=['Sir'])
    social_links: Optional[List[SocialLink]] = None
    status: Optional[str] = Field(None, examples=['New'])
    tags: Optional[Tags] = None
    title: Optional[str] = Field(None, examples=['CEO'])
    updated_at: Optional[str] = Field(None, examples=['2020-09-30T07:43:32.000Z'])
    websites: Optional[List[Website]] = None


class Opportunity(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    close_date: Optional[date] = Field(
        None,
        description='The actual closing date for the opportunity. If close_date is null, the opportunity is not closed yet.',
        examples=['2020-10-30'],
    )
    company_id: Optional[str] = Field(
        None,
        description='The unique identifier of the company associated with the opportunity.',
        examples=['12345'],
    )
    company_name: Optional[str] = Field(
        None,
        description='The name of the company associated with the opportunity.',
        examples=['Copper'],
    )
    contact_id: Optional[str] = Field(
        None,
        description='The unique identifier of the contact associated with the opportunity.',
        examples=['12345'],
    )
    contact_ids: Optional[List[str]] = Field(
        None,
        description='An array of unique identifiers of all contacts associated with the opportunity.',
    )
    created_at: Optional[datetime] = Field(
        None,
        description='The date and time when the opportunity was created.',
        examples=['2020-09-30T07:43:32.000Z'],
    )
    created_by: Optional[str] = Field(
        None,
        description='The unique identifier of the user who created the opportunity.',
        examples=['12345'],
    )
    currency: Optional[Currency] = None
    custom_fields: Optional[List[CustomField]] = None
    date_last_contacted: Optional[datetime] = Field(
        None,
        description='The date and time when the opportunity was last contacted.',
        examples=['2020-09-30T00:00:00.000Z'],
    )
    date_lead_created: Optional[datetime] = Field(
        None,
        description='The date and time when the lead associated with the opportunity was created.',
        examples=['2020-09-30T00:00:00.000Z'],
    )
    date_stage_changed: Optional[datetime] = Field(
        None,
        description='The date and time when the stage of the opportunity was last changed.',
        examples=['2020-09-30T00:00:00.000Z'],
    )
    deleted: Optional[bool] = Field(
        None,
        description='Indicates whether the opportunity has been deleted.',
        examples=[False],
    )
    description: Optional[str] = Field(
        None,
        description='A description of the opportunity.',
        examples=[
            'Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.'
        ],
    )
    expected_revenue: Optional[float] = Field(
        None, description='The expected revenue from the opportunity', examples=[75000]
    )
    id: Optional[str] = Field(
        None, description='A unique identifier for the opportunity.', examples=['12345']
    )
    interaction_count: Optional[float] = Field(
        None,
        description='The number of interactions with the opportunity.',
        examples=[0],
    )
    last_activity_at: Optional[str] = Field(
        None,
        description='The date and time of the last activity associated with the opportunity.',
        examples=['2020-09-30T07:43:32.000Z'],
    )
    lead_id: Optional[str] = Field(
        None,
        description='The unique identifier of the lead associated with the opportunity.',
        examples=['12345'],
    )
    lead_source: Optional[str] = Field(
        None,
        description='The source of the lead associated with the opportunity.',
        examples=['Website'],
    )
    loss_reason: Optional[str] = Field(
        None,
        description='The reason why the opportunity was lost.',
        examples=['No budget'],
    )
    loss_reason_id: Optional[str] = Field(
        None,
        description='The unique identifier of the reason why the opportunity was lost.',
        examples=['12345'],
    )
    monetary_amount: Optional[float] = Field(
        None,
        description='The monetary value associated with the opportunity',
        examples=[75000],
    )
    owner_id: Optional[str] = Field(
        None,
        description='The unique identifier of the user who owns the opportunity.',
        examples=['12345'],
    )
    pipeline_id: Optional[str] = Field(
        None,
        description='The unique identifier of the pipeline associated with the opportunity',
        examples=['12345'],
    )
    pipeline_stage_id: Optional[str] = Field(
        None,
        description='The unique identifier of the stage in the pipeline associated with the opportunity.',
        examples=['12345'],
    )
    primary_contact_id: str = Field(
        ...,
        description='The unique identifier of the primary contact associated with the opportunity.',
        examples=['12345'],
    )
    priority: Optional[str] = Field(
        None, description='The priority level of the opportunity.', examples=['None']
    )
    source_id: Optional[str] = Field(
        None,
        description='The unique identifier of the source of the opportunity.',
        examples=['12345'],
    )
    stage_last_changed_at: Optional[datetime] = Field(
        None,
        description='The date and time when the stage of the opportunity was last changed.',
        examples=['2020-09-30T07:43:32.000Z'],
    )
    status: Optional[str] = Field(
        None, description='The current status of the opportunity.', examples=['Open']
    )
    status_id: Optional[str] = Field(
        None,
        description='The unique identifier of the current status of the opportunity.',
        examples=['12345'],
    )
    tags: Optional[Tags] = None
    title: constr(min_length=1) = Field(
        ...,
        description='The title or name of the opportunity.',
        examples=['New Rocket'],
    )
    type: Optional[str] = Field(
        None,
        description='The type of the opportunity',
        examples=['Existing Customer - Upgrade'],
    )
    updated_at: Optional[datetime] = Field(
        None,
        description='The date and time when the opportunity was last updated.',
        examples=['2020-09-30T07:43:32.000Z'],
    )
    updated_by: Optional[str] = Field(
        None,
        description='The unique identifier of the user who last updated the opportunity.',
        examples=['12345'],
    )
    win_probability: Optional[float] = Field(
        None,
        description='The probability of winning the opportunity, expressed as a percentage.',
        examples=[40],
    )
    won_reason: Optional[str] = Field(
        None,
        description='The reason why the opportunity was won.',
        examples=['Best pitch'],
    )
    won_reason_id: Optional[str] = Field(
        None,
        description='The unique identifier of the reason why the opportunity was won.',
        examples=['12345'],
    )
